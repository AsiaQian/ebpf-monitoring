# 1. Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring # Assumes 'monitoring' namespace already exists or is created by Prometheus file
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.4.0
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources-volume # 挂载卷的名称，与下方 volumes 对应
              mountPath: /etc/grafana/provisioning/datasources # Grafana 读取数据源配置的目录
              readOnly: true # 只读挂载，防止容器修改配置
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin # !!! IMPORTANT: Change this in production
            # - name: GF_INSTALL_PLUGINS
            #   value: "grafana-piechart-panel"
      volumes:
        - name: grafana-storage
          emptyDir: {} # For demonstration, use emptyDir. For persistence, use a PersistentVolumeClaim.
        - name: grafana-datasources-volume # 卷的名称，与上方 volumeMounts 对应
          configMap:
              name: grafana-prometheus-datasource # 引用上面创建的 ConfigMap 的名称
---
# 2. Grafana Service (NodePort for external access)
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: NodePort